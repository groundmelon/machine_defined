<launch>
	<node pkg="mocap_optitrack"
		type="mocap_node"
		name="mocap_node"
		respawn="false"
		launch-prefix=""
		output="screen"
		required="true">
        <rosparam>
            rigid_bodies:
                '6':
                    pose: Robot_1/pose
                    pose2d: Robot_1/ground_pose
                    child_frame_id: Robot_1/base_link
                    parent_frame_id: vicon
            optitrack_config:
                multicast_address: 224.0.0.1
                sdk_version: 2.8
        </rosparam>
	</node>

	<node pkg="mocap_optitrack" type="mocap_optitrack_object_transform_node" name="mocap_object_transformer" output="screen">
		<remap from="~in_pose" to="/Robot_1/pose" />
		<remap from="~odom" to="/mocap/odom" />
	</node>

    <node pkg="poseekf" type="poseekf" name="poseekf" output="screen">
        <remap from="~imu" to="/djiros/imu"/>
        <remap from="~odom_slam" to="/mocap/odom"/>
        <rosparam file="$(find poseekf)/config/params.yaml"/>
    </node>

    <node pkg="odometry_assist" type="odometry_assist_node" name="odom_poseekf_vis" output="screen" >
        <rosparam command="load" file="$(find machine_defined)/config/odom_assist_ekf.yaml" />
        <remap from="~odom" to="/poseekf/odom" />
    </node>

    <node name="tf_assist" pkg="uav_utils" type="tf_assist.py" output="screen">
	    <param name="~converter0/frame_id_in" value="world" />
	    <param name="~converter0/frame_id_out" value="world" />
	    <param name="~converter0/broadcast_tf" value="false" />
	    <param name="~converter0/body_frame_id" value="body" />
	    <param name="~converter0/intermediate_frame_id" value="intermediate" />
	    <param name="~converter0/world_frame_id" value="world" />
	    <remap from="~converter0/in_odom" to="/poseekf/odom" />    
	    <remap from="~converter0/out_odom" to="/odom" />
	    <remap from="~converter0/out_path" to="/ekfpath" />
  	</node>

</launch>
