<launch>
	<node pkg="fisheye_gimbal" type="fisheye_gimbal_node" name="fisheye_gimbal" output="screen" launch-prefix="">
        <remap from="~imu" to="/djiros/imu" />
        <remap from="~image" to="/djiros/image" />
        <rosparam>
            # Path of calibration file generated by camera_model::MEI
            calibration_file_path: "/home/ust/bags/mv25000681_mei.yaml"
            
            # Camera intrinsic for a non-distortion pinhole model camera
            camera_parameters:
                width: 320
                height: 240
                fx: 120.0
                fy: 120.0
                cx: 160.0
                cy: 120.0
            
            # 3x3 rotation matrix from body to camera, row-major
            bRc: [0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0]

            
            # Orientation extract mode. Choose from: lock / yaw-free / custom / all-free
            orientation_extract_mode: lock
            
            # Turn on/off some debug print out.
            debug_mode: false
        </rosparam>
    </node>

    <node pkg="planar_homography_estimator" type="planar_homography_estimator" name="planar_homography_estimator" output="screen" launch-prefix="">
        <remap from="~image" to="/fisheye_gimbal/cropped/image" />
        <remap from="~camera_parameters" to="/fisheye_gimbal/cropped/camera_parameters" />
        <remap from="~orientation" to="/fisheye_gimbal/cropped/orientation" />
        <remap from="~height" to="/terarangerone/height" />
        <rosparam>
            enable_visualization: false
        </rosparam>
    </node>

    <node if="true"
        pkg="quadukf"
        name="quadukf"
        type="quadukf_node"       
        output="screen"
        launch-prefix=""
        >
        <!-- <remap from="~odom_gps"    to="TODO"/>     -->
        <!-- <remap from="~odom_vision" to="TODO"/> -->
        <remap from="~imu"         to="/djiros/imu"/>
        <!-- <remap from="~odom_laser"  to="/laser_pose_estimator/odom"/>     -->
        <remap from="~opti_flow"   to="/planar_homography_estimator/velocity"/>
        <!-- <remap from="~odom_vision"   to="/self_calibration_estimator/odometry"/> -->
        <remap from="~height_rel"  to="/terarangerone/height"/>
        <!-- <remap from="~height_abs"  to="/sonar/height"/> -->
        <!-- <remap from="~relative_havo"  to="/planar_homography_estimator/rel_odom"/> -->
        <!-- <remap from="~global_vo_pose"  to="/registration/odometry"/> -->

        <rosparam>
            init_source: "optiflow"
            process_std: [0.2,0.2,0.2,0.1,0.1,0.1,0.05,0.05,0.05]
            gravity_correction_std: [1,1,1]
        </rosparam>
    </node>

    <node pkg="odometry_assist" type="odometry_assist_node" name="odom_quadukf_vis" output="screen" >
        <rosparam>
            default:
                color:
                    r: 1.0
                    g: 0.0
                    b: 0.0
                    a: 1.0
                base_frame_id: "world"

            tf:
                enable: true
                # base_frame_id: "world" # can be omitted or overwrite default/base_frame_id
                body_frame_id: "body"
                intermediate_frame_id: "intermediate"
                intermediate_frame_enable: true
                base_alias_frame_id: "map"
                base_alias_frame_enable: false

            velocity:
                enable: true
                # color: # can be omitted or overwrite default/color
                #   r: 1.0
                #   g: 0.0
                #   b: 0.0
                #   a: 0.0

            path:
                enable: true
                decimation: 10 # no decimation when less than 1 
                max_history: -1.0 # infinite history when less than 0

            euler:
                enable: false
        </rosparam>
        <remap from="~odom" to="/quadukf/odom" />
    </node>
</launch>
