<launch>
    <node if="false"
        pkg="quadsim" type="vosim_node" name="vosim" output="screen">
        <remap from="~odom" to="/odom"/>
    </node>

    <node if="true"
        pkg="gps_converter" type="gps_converter" name="gps_converter" output="screen" >
        <remap from="~gps" to="/djiros/gps" />
        <remap from="~imu" to="/djiros/imu" />
        <rosparam> signal_sample_duration: 3.0 </rosparam>
    </node>

    <node if="true"
        pkg="planar_homography_estimator" type="planar_homography_estimator" name="planar_homography_estimator" output="screen"
        >
        <remap from="~height" to="/feature_sim/height"/>
        <remap from="~points" to="/feature_sim/points"/>
        
        <remap from="~height" to="/gps_converter/height"/>
        <remap from="~image" to="/camera/image"/>
        <param name="calib_file_path" value="/home/ltb/bags/25001482_opencv.yml" />
        <rosparam>
            ransac:
                ptsCnt: 4
                trialCnt: 100
                threshold: 0.002
                inlier_lower_limit: 30
            residue:
                threshold: 0.11
                inlier_lower_limit: 60
            extract:
                featW: 24
                featH: 16
            # At most 300 pts, threshold about 50, then std can be [1/6 * std_up_to_scale, std_up_to_scale]
            std_up_to_scale: 0.1
            enable_velocity_threshold: 2.0
        </rosparam>
    </node>



    <node if="true"
        pkg="quadukf"
        name="quadukf"
        type="highatti_quadukf_node"
        output="screen"
        launch-prefix=""
        >
        <!-- <remap from="~odom_vision" to="TODO"/> -->
        <!-- <remap from="~imu"         to="/quadsim/imu/noisy"/> -->
        <remap from="~imu"         to="/djiros/imu"/>
        <!-- <remap from="~odom_laser"  to="/laser_pose_estimator/odom"/>     -->
        <!-- <remap from="~opti_flow"   to="/monocular_velocity_estimator/odom"/> -->
        <remap from="~opti_flow"   to="/planar_homography_estimator/velocity"/>
        <!-- <remap from="~odom_vision"   to="/self_calibration_estimator/odometry"/> -->
        <!-- <remap from="~height_rel"  to="/feature_sim/height"/> -->
        <!-- <remap from="~height_rel"  to="/scan/height"/> -->
        <remap from="~gps"    to="/gps_converter/odom"/>    
        <remap from="~height_rel"  to="/gps_converter/height"/>
        <remap from="~relative_havo"  to="/planar_homography_estimator/rel_odom"/>

        <rosparam>
            init_source: "relative_havo"
            # process_std: [0.2,0.2,0.2,0.1,0.1,0.1,0.05,0.05,0.05]
            gravity_correction_std: [1.0, 1.0, 1.0]
            process_std: [0.2,0.2,0.2,0.1,0.1,0.1,0.05,0.05,0.05, 0.05, 0.001]
        </rosparam>
    </node>

    <node if="true"
        pkg="odometry_assist" type="odometry_assist_node" name="odom_quadukf_vis" output="screen" >
        <remap from="~odom" to="/quadukf/odom" />
        <rosparam>
            default:
                color:
                    r: 1.0
                    g: 0.0
                    b: 0.0
                    a: 0.0
                base_frame_id: "world"

            tf:
                enable: true
                # base_frame_id: "world" # can be omitted or overwrite default/base_frame_id
                body_frame_id: "ukfbody"
                intermediate_frame_id: "intermediate"
                intermediate_frame_enable: false
                base_alias_frame_id: "map"
                base_alias_frame_enable: false

            velocity:
                enable: true
                # color: # can be omitted or overwrite default/color
                #   r: 1.0
                #   g: 0.0
                #   b: 0.0
                #   a: 0.0

            path:
                enable: true
                decimation: 0 # no decimation when less than 1 
                max_history: -1.0 # infinite history when less than 0

            euler:
                enable: false
        </rosparam>
    </node>

    <node if="true"
        pkg="odometry_assist" type="odometry_assist_node" name="gps_vis" output="screen" >
        <remap from="~odom" to="/gps_converter/odom" />
        <rosparam>
            default:
                color:
                    r: 0.3
                    g: 1.0
                    b: 1.0
                    a: 0.0
                base_frame_id: "world"

            tf:
                enable: false
                # base_frame_id: "world" # can be omitted or overwrite default/base_frame_id
                body_frame_id: "body"
                intermediate_frame_id: "intermediate"
                intermediate_frame_enable: false
                base_alias_frame_id: "map"
                base_alias_frame_enable: false

            velocity:
                enable: false
                # color: # can be omitted or overwrite default/color
                #   r: 1.0
                #   g: 0.0
                #   b: 0.0
                #   a: 0.0

            path:
                enable: true
                decimation: 0 # no decimation when less than 1 
                max_history: -1.0 # infinite history when less than 0

            euler:
                enable: false
        </rosparam>
    </node>
        
</launch>
